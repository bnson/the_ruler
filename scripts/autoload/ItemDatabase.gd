extends Node

var items: Dictionary = {}
var is_item_data_ready: bool = false

func _ready():
	print("üì¶ Item Database initializing...")
	load_items()
	is_item_data_ready = true


### ‚úÖ Load t·∫•t c·∫£ item t·ª´ th∆∞ m·ª•c
func load_items():
	items.clear()

	var dir := DirAccess.open("res://resources/items")
	if dir:
		dir.list_dir_begin()
		var file_name := dir.get_next()
		while file_name != "":
			if file_name.ends_with(".tres") or file_name.ends_with(".tres.remap"):
				var clean_name = file_name
				if clean_name.ends_with(".remap"):
					clean_name = clean_name.replace(".remap", "")
				var full_path = "res://resources/items/" + clean_name
				var item = load(full_path)
				if item and item is Item:
					items[item.id] = item
					print("üîπ Loaded item:", item.id)
				else:
					push_warning("‚ö† Kh√¥ng load ƒë∆∞·ª£c: " + full_path)
			file_name = dir.get_next()
	else:
		push_error("‚ùå Kh√¥ng th·ªÉ m·ªü th∆∞ m·ª•c items.")

	print("‚úÖ Loaded %d items." % items.size())


### ‚úÖ Ki·ªÉm tra ƒë√£ load xong
func is_ready() -> bool:
	return is_item_data_ready and items.size() > 0


### ‚úÖ L·∫•y item theo ID an to√†n
func get_item(id: String) -> Item:
	if items.has(id):
		return items[id]
	push_warning("‚ö† Item kh√¥ng t·ªìn t·∫°i: " + id)
	return null
